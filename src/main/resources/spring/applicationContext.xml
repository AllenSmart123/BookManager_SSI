<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
    

	
	<!-- 引用JDBC属性的配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:mysql_dataSource.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}" />
		<property name="jdbcUrl" value="${jdbcUrl}" />
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="minPoolSize" value="${minPoolSize}" />
		<property name="maxPoolSize" value="${maxPoolSize}" />
		<property name="maxIdleTime" value="${maxIdleTime}" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 方法1: 必须要在mybatis-config.xml中添加Mapper.xml文件-->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 方法1: 直接引入Mapper.xml文件,暂时有问题-->
		<!-- <property name="configLocation" value="classpath*:mapper/*.xml"></property> -->
	</bean>

	<!-- 用户Dao -->
	<!-- 	
	<bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
    	<property name="mapperInterface" value="com.sxis.dao.UserDao" />  
    	<property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	</bean> 
	-->
	<!-- mybatis的扫描配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sxis.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- spring MVC 的事务管理 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean>   
    <tx:advice id="TestAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="allTestServiceMethod" expression="execution(* com.sxis.service.*.*(..))" />
		<aop:advisor advice-ref="TestAdvice" pointcut-ref="allTestServiceMethod" />
	</aop:config>
	
	
	<!-- 启用AspectJ对Annotation的支持 -->
	<aop:aspectj-autoproxy />
	<bean id="myAop" class="com.sxis.aop.MyAop"></bean>
	
</beans>